<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://kallenosf.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://kallenosf.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-11-17T23:45:34+00:00</updated><id>https://kallenosf.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Race condition bug in the most popular Greek e-commerce app</title><link href="https://kallenosf.github.io/blog/2024/bug-bounty/" rel="alternate" type="text/html" title="Race condition bug in the most popular Greek e-commerce app"/><published>2024-11-17T14:14:00+00:00</published><updated>2024-11-17T14:14:00+00:00</updated><id>https://kallenosf.github.io/blog/2024/bug-bounty</id><content type="html" xml:base="https://kallenosf.github.io/blog/2024/bug-bounty/"><![CDATA[<p><strong>TL;DR :</strong> I found a race-condition bug in a popular greek e-commerce app, that allowed me to redeem the <u>same gift-card twice</u>.</p> <h2 id="race-conditions">Race conditions</h2> <ul> <li>Back in September 2023, Portswigger published <a href="https://portswigger.net/web-security/race-conditions">content</a> in their web-security academy about race condition vulnerabilities.</li> <li><u>Race conditions</u> usually occurr when websites handle requests <strong>in parallel without adequate safeguards</strong>, leading to ‚Äúcollisions‚Äù that result in unintended behavior.</li> <li>This type of vulnerability is similar to <strong>business logic</strong> flaws.</li> <li>In a race condition attack, an attacker sends <strong>carefully timed</strong> requests to <strong>intentionally create collisions</strong> and exploit the resulting unintended behavior for malicious purposes.</li> </ul> <h3 id="limit-overrun-race-conditions">Limit overrun race conditions</h3> <ul> <li>The most common type of race condition allows an attacker to <strong>bypass some kind of limit</strong> imposed by the application‚Äôs business logic.</li> <li>For instance, consider an e-shop where a customer wants to use a <strong>one-time</strong> discount code. The application might handle the process as follows:</li> </ul> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/race-conditions1-480.webp 480w,/assets/img/race-conditions1-800.webp 800w,/assets/img/race-conditions1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/race-conditions1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <ul> <li>Now consider what would happen if a user who has never applied this discount code before tried to apply it <strong>twice at almost exactly the same time</strong>:</li> </ul> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/race-conditions2-480.webp 480w,/assets/img/race-conditions2-800.webp 800w,/assets/img/race-conditions2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/race-conditions2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Images from Portswigger web-security Academy </div> <ul> <li>The application transitions through a temporary sub-state.</li> <li>This sub-state begins when the server starts processing the first request, and ends when it updates the database to indicate that a discount code is used.</li> <li>This introduces a small race window during which you can repeatedly claim the discount as many times as you like.</li> <li>There are many variations of this kind of attack, including: <ul> <li>Redeeming a gift card multiple times (üòâ)</li> <li>Rating a product multiple times</li> <li>Withdrawing or transferring cash in excess of your account balance</li> <li>Reusing a single CAPTCHA solution</li> <li>Bypassing an anti-brute-force rate limit</li> </ul> </li> </ul> <h2 id="testing-for-race-condition-vulnerabilities">Testing for race condition vulnerabilities</h2>]]></content><author><name></name></author><category term="web"/><category term="bug-bounty"/><category term="race-condition"/><summary type="html"><![CDATA[an example of a blog post with table of contents on a sidebar]]></summary></entry></feed>